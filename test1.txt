import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import fitz  # pymupdf，用來轉 PDF 頁面成圖像 + 文字提取
from io import BytesIO  # 用來存圖像

st.set_page_config(page_title="混凝土設計工具", layout="wide")  # 寬屏布局

# 主目錄（側邊欄）
menu = st.sidebar.radio(
    "主目錄",
    ["梁彎矩計算", "梁剪力計算", "PDF 條文搜索"]
)

# 公用參數
pdf_path = "CoP_SUC2013e.pdf"  # PDF 檔名

if menu == "梁彎矩計算":
    st.title("梁彎矩容量計算 (基於CoP 2013 Clause 6.1.2)")
    
    fcu = st.number_input("混凝土強度 (MPa)", min_value=20.0, max_value=100.0, value=30.0)
    fy = st.number_input("鋼筋強度 (MPa)", min_value=250.0, max_value=500.0, value=460.0)
    b = st.number_input("梁寬 (mm)", min_value=100.0, max_value=1000.0, value=300.0)
    d = st.number_input("有效深度 (mm)", min_value=100.0, max_value=2000.0, value=500.0)
    As = st.number_input("彎曲鋼筋面積 (mm²)", min_value=0.0, max_value=10000.0, value=1000.0)
    
    if st.button("計算彎矩容量"):
        if fcu <= 45:
            beta = 0.9
        elif fcu <= 80:
            beta = 0.9 - (fcu - 45) * 0.005
        else:
            beta = 0.72
        
        x = (As * fy) / (0.567 * fcu * b * beta)
        
        if x > 0.5 * d:
            st.write("警告：過鋼筋設計 (x/d > 0.5)，請加壓縮鋼筋或減少As。")
        else:
            z = d - 0.45 * x
            Mu = 0.87 * fy * As * z / 1e6
            st.write(f"計算結果：彎矩容量 Mu = {Mu:.2f} kNm")
            st.write("參考條文：CoP 2013 Clause 6.1.2。注意：簡化計算，未計最小鋼筋。")

elif menu == "梁剪力計算":
    st.title("梁剪力容量計算 (基於CoP 2013 Clause 6.1.2.5)")
    
    fcu = st.number_input("混凝土強度 (MPa)", min_value=20.0, max_value=100.0, value=30.0)
    fy = st.number_input("鋼筋強度 (MPa)", min_value=250.0, max_value=500.0, value=460.0)
    b = st.number_input("梁寬 (mm)", min_value=100.0, max_value=1000.0, value=300.0)
    d = st.number_input("有效深度 (mm)", min_value=100.0, max_value=2000.0, value=500.0)
    As = st.number_input("彎曲鋼筋面積 (mm²)", min_value=0.0, max_value=10000.0, value=1000.0)
    Asv = st.number_input("剪力鋼筋面積 (mm²/支)", min_value=0.0, max_value=1000.0, value=200.0)
    sv = st.number_input("剪力鋼筋間距 (mm)", min_value=50.0, max_value=500.0, value=200.0)
    V = st.number_input("設計剪力 (kN)", min_value=0.0, max_value=1000.0, value=100.0)
    
    if st.button("計算剪力容量"):
        rho = 100 * As / (b * d)
        Vc = 0.79 * np.power(rho, 1/3) * np.power((fcu / 25), 1/3) * np.power((400 / d), 1/4) * b * d / 1.25 / 1e3
        
        Vsv = 0.87 * fy * Asv / sv * d
        
        Vu = Vc + Vsv
        if V > Vu:
            st.write("警告：剪力不足，需加強鋼筋。")
        else:
            st.write(f"計算結果：剪力容量 Vu = {Vu:.2f} kN (Vc = {Vc:.2f} kN, Vsv = {Vsv:.2f} kN)")
        st.write("參考條文：CoP 2013 Clause 6.1.2.5。注意：簡化，未計寬梁或斜箍。")
        
        fig, ax = plt.subplots()
        ax.bar(['Vc', 'Vsv', 'Vu'], [Vc, Vsv, Vu])
        ax.set_ylabel('kN')
        ax.set_title('剪力組成')
        st.pyplot(fig)

elif menu == "PDF 條文搜索":
    st.title("CoP 條文搜索 (顯示原 PDF 頁面)")
    
    search_term = st.text_input("輸入條文 (e.g. Clause 6.1.2)")
    
    if search_term:
        doc = fitz.open(pdf_path)
        results = []
        for page_num in range(len(doc)):
            page = doc.load_page(page_num)
            text = page.get_text("text")
            if search_term.lower() in text.lower():  # 不分大小寫搜
                pix = page.get_pixmap(matrix=fitz.Matrix(1.5, 1.5))
                img_bytes = pix.tobytes("png")
                results.append((page_num + 1, BytesIO(img_bytes)))
        
        if results:
            for page_num, img in results:
                st.write(f"找到喺頁 {page_num}：")
                st.image(img, use_column_width=True)
        else:
            st.write("未找到相關條文。")
        doc.close()
